{"version":3,"sources":["Table.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","this","Component","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","htmlFor","type","id","onChange","App","characters","filter","character","i","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEMA,EAAc,WAChB,OACI,gCACE,+BACE,sCACA,qCACA,8CAMNC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJCA,MASjB,OAAO,gCAAQJ,KAiBJS,E,4JAZb,WAAU,IAAD,EACkCC,KAAKX,MAAvCE,EADA,EACAA,cAAeO,EADf,EACeA,gBAEtB,OACI,kCACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,W,GAP9CG,a,OCeLC,E,4MA1CXC,aAAe,CACXR,KAAM,GACNC,IAAK,I,EAGTQ,MAAQ,EAAKD,a,EACbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBZ,EADe,EACfA,KAAMa,EADS,EACTA,MAEb,EAAKC,SAAL,eACKd,EAAOa,K,EAIhBE,WAAa,WACT,EAAKrB,MAAMsB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAEvB,WAAW,IAAD,EACcH,KAAKI,MAAlBT,EADD,EACCA,KAAMC,EADP,EACOA,IACb,OACI,iCACA,uBAAOgB,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHN,MAAOb,EACPoB,SAAUf,KAAKK,eACjB,uBAAOO,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHN,MAAOZ,EACPmB,SAAUf,KAAKK,eACf,uBAAOQ,KAAK,SAASL,MAAM,SAASX,QAASG,KAAKU,oB,GArC7CT,aC8BFe,E,4MA5BbZ,MAAQ,CACJa,WAAY,I,EAIhBnB,gBAAkB,SAACJ,GAAW,IACnBuB,EAAc,EAAKb,MAAnBa,WAEP,EAAKR,SAAS,CACVQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM1B,Q,EAKzBiB,aAAe,SAACQ,GACZ,EAAKV,SAAS,CAACQ,WAAW,GAAD,mBAAM,EAAKb,MAAMa,YAAjB,CAA6BE,O,4CAE1D,WACE,OACE,sBAAKE,UAAU,YAAf,UACE,cAAC,EAAD,CAAO9B,cAAeS,KAAKI,MAAMa,WAAYnB,gBAAiBE,KAAKF,kBACnE,cAAC,EAAD,CAAMa,aAAcX,KAAKW,sB,GAvBjBV,aCSHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bd48bc21.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Job</th>\r\n            <th>Remove</th>\r\n          </tr>\r\n        </thead>\r\n      )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}> \r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return <tbody>{rows}</tbody>\r\n      \r\n}\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const {characterData, removeCharacter} = this.props\r\n\r\n    return (\r\n        <table>\r\n        <TableHeader />\r\n        <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table","import React, {Component} from 'react'\r\n\r\nclass Form extends Component {\r\n    initialState = {\r\n        name: '',\r\n        job: ''\r\n    }\r\n\r\n    state = this.initialState;\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n    render () {\r\n        const {name, job} = this.state\r\n        return (\r\n            <form>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange} />\r\n            <label htmlFor=\"job\">Job</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"job\"\r\n              id=\"job\"\r\n              value={job}\r\n              onChange={this.handleChange} />\r\n              <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n          </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form","import React, {Component} from 'react'\r\nimport Table from './Table'\r\nimport Form from './Form'\r\nclass App extends Component {\r\n    state = {\r\n        characters: [\r\n          \r\n        ]\r\n    }\r\n    removeCharacter = (index) => {\r\n        const {characters} = this.state\r\n\r\n        this.setState({\r\n            characters: characters.filter((character, i) =>{\r\n                return i !== index\r\n            })\r\n        })\r\n    }\r\n\r\n    handleSubmit = (character) => {\r\n        this.setState({characters: [...this.state.characters, character]})\r\n    }\r\n    render() {\r\n      return (\r\n        <div className=\"container\">\r\n          <Table characterData={this.state.characters} removeCharacter={this.removeCharacter}/>\r\n          <Form handleSubmit={this.handleSubmit} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}